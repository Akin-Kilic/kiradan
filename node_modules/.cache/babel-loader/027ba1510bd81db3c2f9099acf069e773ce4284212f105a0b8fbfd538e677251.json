{"ast":null,"code":"var _jsxFileName = \"D:\\\\Akin\\\\Code\\\\REACT\\\\kiracidan\\\\src\\\\components\\\\categories\\\\CategoryList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListGroup, ListGroupItem, Badge } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CategoryList extends Component {\n  constructor() {\n    super(...arguments);\n    this.selectCategory = category => {\n      this.props.actions.changeCategory(category);\n    };\n  }\n  componentDidMount() {\n    this.props.actions.getCategories();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"warning\",\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: this.props.categories.map(category => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          active: category.id === this.props.currentCategory.id,\n          onClick: () => this.selectCategory(category),\n          children: category.categoryName\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    currentCategory: state.changeCategoryReducer,\n    categories: state.categoryListReducer\n  };\n}\nfunction mapDispatchToProps(dsipatch) {\n  return {\n    actions: {\n      getCategories: bindActionCreators(categoryActions.getCategories, dsipatch),\n      changeCategory: bindActionCreators(categoryActions.changeCategory, dsipatch)\n    }\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);","map":{"version":3,"names":["React","Component","connect","ListGroup","ListGroupItem","Badge","bindActionCreators","categoryActions","CategoryList","selectCategory","category","props","actions","changeCategory","componentDidMount","getCategories","render","categories","map","id","currentCategory","categoryName","mapStateToProps","state","changeCategoryReducer","categoryListReducer","mapDispatchToProps","dsipatch"],"sources":["D:/Akin/Code/REACT/kiracidan/src/components/categories/CategoryList.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ListGroup, ListGroupItem, Badge } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\r\n\r\nclass CategoryList extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getCategories();\r\n  }\r\n\r\n  selectCategory = (category) => {\r\n    this.props.actions.changeCategory(category);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          <Badge color=\"warning\">Categories</Badge>\r\n        </h3>\r\n        <ListGroup>\r\n          {this.props.categories.map((category) => (\r\n            <ListGroupItem\r\n              key={category.id}\r\n              active={category.id === this.props.currentCategory.id}\r\n              onClick={() => this.selectCategory(category)}\r\n            >\r\n              {category.categoryName}\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentCategory: state.changeCategoryReducer,\r\n    categories: state.categoryListReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dsipatch) {\r\n  return {\r\n    actions: {\r\n      getCategories: bindActionCreators(\r\n        categoryActions.getCategories,\r\n        dsipatch\r\n      ),\r\n      changeCategory: bindActionCreators(\r\n        categoryActions.changeCategory,\r\n        dsipatch\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS,EAAEC,aAAa,EAAEC,KAAK,QAAQ,YAAY;AAC5D,SAASC,kBAAkB,QAAQ,OAAO;AAC1C,OAAO,KAAKC,eAAe,MAAM,qCAAqC;AAAC;AAEvE,MAAMC,YAAY,SAASP,SAAS,CAAC;EAAA;IAAA;IAAA,KAKnCQ,cAAc,GAAIC,QAAQ,IAAK;MAC7B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,cAAc,CAACH,QAAQ,CAAC;IAC7C,CAAC;EAAA;EANDI,iBAAiB,GAAG;IAClB,IAAI,CAACH,KAAK,CAACC,OAAO,CAACG,aAAa,EAAE;EACpC;EAMAC,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAA,uBACE,QAAC,KAAK;UAAC,KAAK,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAmB;QAAA;QAAA;QAAA;MAAA,QACtC,eACL,QAAC,SAAS;QAAA,UACP,IAAI,CAACL,KAAK,CAACM,UAAU,CAACC,GAAG,CAAER,QAAQ,iBAClC,QAAC,aAAa;UAEZ,MAAM,EAAEA,QAAQ,CAACS,EAAE,KAAK,IAAI,CAACR,KAAK,CAACS,eAAe,CAACD,EAAG;UACtD,OAAO,EAAE,MAAM,IAAI,CAACV,cAAc,CAACC,QAAQ,CAAE;UAAA,UAE5CA,QAAQ,CAACW;QAAY,GAJjBX,QAAQ,CAACS,EAAE;UAAA;UAAA;UAAA;QAAA,QAMnB;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR;EAEV;AACF;AAEA,SAASG,eAAe,CAACC,KAAK,EAAE;EAC9B,OAAO;IACLH,eAAe,EAAEG,KAAK,CAACC,qBAAqB;IAC5CP,UAAU,EAAEM,KAAK,CAACE;EACpB,CAAC;AACH;AAEA,SAASC,kBAAkB,CAACC,QAAQ,EAAE;EACpC,OAAO;IACLf,OAAO,EAAE;MACPG,aAAa,EAAET,kBAAkB,CAC/BC,eAAe,CAACQ,aAAa,EAC7BY,QAAQ,CACT;MACDd,cAAc,EAAEP,kBAAkB,CAChCC,eAAe,CAACM,cAAc,EAC9Bc,QAAQ;IAEZ;EACF,CAAC;AACH;AAEA,eAAezB,OAAO,CAACoB,eAAe,EAAEI,kBAAkB,CAAC,CAAClB,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}